---
import Image from 'astro/components/Image.astro';
import '../styles/style.css';
import Projects from '../components/projects/projects.astro';
import Services from '../components/services/services.astro';
import Contact from '../components/contact/contact.astro';
import Header from '../components/header/header.astro';
import pic from '../assets/pic4.jpg'
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Portfolio</title>
		<link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
    />
	<!-- <link rel="stylesheet" href="style.css"> -->
	</head>
	<body>
		<button id="theme-toggle">
		  <i id="theme-icon" class="fas fa-sun"></i>
		</button>
		<div class="nav-list">
		  <span class="cancel"><i class="fa-sharp fa-solid fa-xmark"></i></span>
		  <ul>
			<li><a href="#home" class="nav-link">Home</a></li>
			<li><a href="#projects" class="nav-link">Projects</a></li>
			<li><a href="#services" class="nav-link">Services</a></li>
			<li><a href="#contact" class="nav-link">Contact Me</a></li>
		  </ul>
		</div>
		<!-- fixed header -->
		<!-- <header class="fixed-nav">
		  <nav>
			<ul>
			  <li class="logo">𝒜𝓈𝒽𝓊𝓉𝑜𝓈𝒽</li>
			</ul>
			<ul>
			  <li class="menu-icon"><i class="fa-solid fa-bars"></i></li>
			</ul>
	
			<ul class="right-nav">
			  <li><a href="#home" class="link">Home</a></li>
			  <li><a href="#projects" class="link">Projects</a></li>
			  <li><a href="#services" class="link">Services</a></li>
			  <li><a href="#contact" class="link">Contact Me</a></li>
			</ul>
		  </nav>
		</header> -->
		<div class="container">
		  <!-- header section -->
		<Header />
		  <!-- nav list -->
	
		  <!-- about section -->
		  <section class="about" id="home">
			<div class="left">
			  <div class="head hidden">
				<h1>Hello, I'm Salaman Khan</h1>
				<h3 class="sub-heading"><span></span>Full Stack Developer </h3>
			  </div>
	
			  <div class="foot hidden">
				<a
				  class="btn"
				  href="https://drive.google.com/file/d/1S1xF0UyxoeRXCxC9v3YvuWrhS5X5_rZ-/view?usp=sharing"
				  target="_blank"
				  >Resume</a
				>
				<a class="btn" href="#contact">Contact Me</a>
			  </div>
			</div>
			<div class="right hidden">
			  <div class="circle-1">
				<!-- <Image src="../images/pic4.jpeg" alt="" /> -->
				 <Image src={pic} alt={"my pic"} format='avif'/>
				<!-- <img src="../src/images/pic4.jpeg" alt="" /> -->
			  </div>
			</div>
		  </section>
		  <!-- projects section -->
		  <Projects />
		  <!-- services section -->
		  <Services />
		  <!-- contact me section -->
		<Contact />
		</div>
		
	  </body>
</html>

<script>
	
	
	// change theme
function init ():void {
  const theme = localStorage.getItem("theme") || "";
  document.documentElement.setAttribute("data-theme",theme);
  // select home nav link on initialization
  const homeAnchorElements = document.querySelectorAll<HTMLAnchorElement>('a[href="#home"]');
	homeAnchorElements.forEach(anchor => anchor.classList.add("active"))
	// goto top 
	window.scrollTo(0, 0);
}
init();


// toggle theme
(document.getElementById("theme-toggle")!).addEventListener("click", function () {
  changeTheme();
});

function changeTheme():void {
  const theme = localStorage.getItem("theme") || "";

  // const currentTheme = document.documentElement.getAttribute("data-theme");
  const newTheme = theme === "dark" ? "" : "dark";
  console.log(theme)
  document.documentElement.setAttribute("data-theme", newTheme);
  localStorage.setItem("theme", newTheme);

  // Update icon based on theme
  const themeIcon = document.getElementById("theme-icon")!;
  if (newTheme !== "dark") {
    themeIcon.classList.remove("fa-moon");
    themeIcon.classList.add("fa-sun");
  } else {
    themeIcon.classList.remove("fa-sun");
    themeIcon.classList.add("fa-moon");
  }
}

// element entry animation
const obaserver = new IntersectionObserver((entries) => {
  entries.forEach((entry) => {
    if (entry.isIntersecting) {
      entry.target.classList.add("show");
    }
  });
});

const hiddenElm = document.querySelectorAll(".hidden");
const hiddenFadeElm = document.querySelectorAll(".hiddenFadeIn");
const hiddenSlide = document.querySelectorAll(".hiddenSlide");
const hiddenSlideLeftElm = document.querySelectorAll(".hiddenSlideLeft");
const hiddenSlideRightElm = document.querySelectorAll(".hiddenSlideRight");
// add oberver
[
  hiddenElm,
  hiddenFadeElm,
  hiddenSlideLeftElm,
  hiddenSlideRightElm,
  hiddenSlide,
].forEach((elm) => {
  elm.forEach((el) => obaserver.observe(el));
});


// nav links
document.querySelectorAll(".nav-link").forEach((link) => {
  link.addEventListener("click", () => {
    document.body.style.overflow = "";
    (document.querySelector(".nav-list") as HTMLDivElement).style.display = "none";
  });
});
// Menu icon
document.querySelectorAll(".menu-icon").forEach((el) => {
  el.addEventListener("click", () => {
    console.log("menu icon clicked");

    const menuIcon = document.querySelector(".nav-list") as HTMLDivElement;
    if (menuIcon.style.display === "none" || menuIcon.style.display === "") {
      document.body.style.overflow = "hidden";
      menuIcon.style.display = "block";
    } else {
      document.body.style.overflow = ""; // Reset to default
      menuIcon.style.display = "none";
    }
  });
});

// Cancel menu list
document.querySelector(".cancel")!.addEventListener("click", () => {
  const menuIcon = document.querySelector(".nav-list") as HTMLDivElement;
  document.body.style.overflow = ""; // Reset to default
  menuIcon.style.display = "none";
});

// fixed navbar
window.addEventListener("scroll", (e) => {
  // Get the current scroll position
  const scrollTop =
    document.documentElement.scrollTop || document.body.scrollTop;
  // hide and show fixed nav

  const fixedNav = document.querySelector(".fixed-nav") as HTMLDivElement;
  const Nav = document.querySelector(".nav");
  if (scrollTop > 200) {
    fixedNav.style.transform = "translateY(0%)";
    // Nav.style.display = "none";
  } else {
    fixedNav.style.transform = "translateY(-100%)";
    // Nav.style.display = "block";
  }
});


// Select all <a> elements with class .link
	const links = document.querySelectorAll<HTMLAnchorElement>("a.link");
const navLinks = document.querySelectorAll<HTMLAnchorElement>("a.nav-link");
links.forEach((link) => {
	
  scrollToView(link, links);
});
navLinks.forEach((link) => {
  scrollToView(link, navLinks);
});
function scrollToView(link: HTMLAnchorElement, links:NodeListOf<HTMLAnchorElement>) {
  link.addEventListener("click", function (event) {
    // Prevent default anchor click behavior
    event.preventDefault();

    // Remove 'active' class from all links
    links.forEach((l) => l.classList.remove("active"));

    // Add 'active' class to the clicked link
    this.classList.add("active");

    // Scroll to the target section
    const targetId = this.getAttribute("href")!.substring(1);
    const targetElement = document.getElementById(targetId) as HTMLDivElement;
    if (targetId === "home") {
      // Scroll to the top of the viewport if target ID is 'home'
      window.scrollTo({
        top: 0,
        behavior: "smooth",
      });
    } else {
      targetElement.scrollIntoView({
        behavior: "smooth",
        block: "start", // Ensures the target element is aligned to the top of the viewport
      });
    }
  });
}

</script>